image: registry.gitlab.gnome.org/gnome/mutter/master:v3

stages:
 - review
 - build
 - test
 - analysis

check-commit-log:
  stage: review
  variables:
    GIT_DEPTH: "100"
  script:
    - ./.gitlab-ci/check-commit-log.sh
  only:
    - merge_requests

build-mutter:
  stage: build
  script:
    - meson . build -Dbuildtype=debugoptimized -Degl_device=true -Dwayland_eglstream=true --werror --prefix /usr
    - ninja -C build
    - ninja -C build install
  artifacts:
    expire_in: 1 day
    paths:
      - build
  only:
    - merge_requests
    - /^.*$/

build-without-native-backend-and-wayland:
  stage: build
  script:
    - meson . build -Dbuildtype=debugoptimized -Dnative_backend=false -Dudev=false -Dwayland=false -Dcore_tests=false --werror --prefix /usr
    - ninja -C build
    - ninja -C build install
  artifacts:
    expire_in: 1 day
    paths:
      - build
  only:
    - merge_requests
    - /^.*$/

test-mutter:
  stage: test
  dependencies:
    - build-mutter
  variables:
    XDG_RUNTIME_DIR: "$CI_PROJECT_DIR/runtime-dir"
    GSETTINGS_SCHEMA_DIR: "$CI_PROJECT_DIR/build/data"
    G_SLICE: "always-malloc"
    MALLOC_CHECK_: "3"
    NO_AT_BRIDGE: "1"
    MALLOC_PERTURB_: "123"
  script:
    - dconf update
    - mkdir -m 700 $XDG_RUNTIME_DIR
    - glib-compile-schemas $GSETTINGS_SCHEMA_DIR
    - >
      dbus-run-session -- xvfb-run -s '+iglx -noreset'
      meson test -C build --no-rebuild -t 10 --verbose --no-stdsplit --print-errorlogs --wrap catchsegv
  only:
    - merge_requests
    - /^.*$/

can-build-gnome-shell:
  stage: test
  dependencies:
    - build-mutter
  before_script:
    - meson install --no-rebuild -C build
  script:
    - .gitlab-ci/checkout-gnome-shell.sh
    - meson gnome-shell gnome-shell/build --prefix /usr -Dman=false
    - ninja -C gnome-shell/build install
  only:
    - merge_requests
    - /^.*$/

coverity:
  stage: analysis
  allow_failure: true
  script:
    - dnf install -y clang
    - curl https://scan.coverity.com/download/linux64 --data "token=$COVERITY_TOKEN&project=mutter" --output /tmp/coverity_tool.tgz
    - tar zxf /tmp/coverity_tool.tgz
    - CC=clang meson coverity-build
    - ./cov-analysis-linux64-*/bin/cov-build --dir cov-int ninja -C coverity-build
    - tar czf cov-int.tar.gz cov-int
    - curl https://scan.coverity.com/builds?project=mutter
      --form token=$COVERITY_TOKEN --form email=carlosg@gnome.org
      --form file=@cov-int.tar.gz --form version="`git describe --tags`"
      --form description="gitlab CI build"
  only:
    - master
